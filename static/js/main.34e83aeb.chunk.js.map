{"version":3,"sources":["container/App.module.scss","components/Start/Start.js","components/Header/DialogContentTypes/Edit/Edit.js","components/Header/DialogContentTypes/Leaderboard/Leaderboard.js","components/Header/DialogContentTypes/Restart/Restart.js","cardTypes.js","components/Header/Header.js","components/Game/Game.js","container/App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","Box","cursor","height","display","flexDirection","alignItems","justifyContent","textDecoration","Icon","fontSize","typography","h1","color","palette","primary","main","Start","Style","history","useHistory","React","useState","startFadeAnimation","setStartFadeAnimation","typoAnimation","setTypoAnimation","useEffect","setTimeout","Fade","in","timeout","className","p","onClick","event","preventDefault","push","handleClick","Typography","variant","style","visibility","Zoom","Selected","background","common","white","Avatar","width","spacing","grey","Edit","cardType","cardTypes","random","onClickSelectCard","handleDialogClose","Fragment","DialogContent","maxHeight","List","map","card","ListItem","key","id","button","index","onMouseDown","ListItemAvatar","alt","title","icons","ListItemText","DialogActions","Button","secondary","Second","Container","error","Leaderboard","leaderboard","onClickClearLeaderboard","minWidth","maxWidth","item","divider","marginRight","fontWeight","Hidden","smUp","name","length","newName","split","slice","join","handleCutName","xsDown","marginLeft","time","disabled","Restart","DialogContentText","window","location","reload","Math","AppBar","position","zIndex","default","Toolbar","Orange","Yellow","Teal","Red","Header","gameState","handleGetSeconds","openDialog","setOpenDialog","dialogType","setDialogType","randomIcon","setRandomIcon","startTimer","setStartTimer","setTime","handleClickDialogOpen","type","floor","timerinterval","iconinterval","setInterval","newRandom","newTime","clearInterval","square","Tooltip","placement","IconButton","aria-label","edge","disableFocusRipple","size","Dialog","open","onClose","aria-labelledby","DialogTitle","Backdrop","Visible","boxShadow","shadows","ButtonSmall","padding","ButtonLarge","Close","Open","Match","backgroundColor","success","Wrong","Game","handleGame","onClickEnterName","openBackdrop","setOpenBackdrop","countdownStarted","setCountdownStarted","countdown","setCountdown","countdownColor","setCountdownColor","openCards","matchedCards","iconsArray","handleIconClick","icon","currentCard","document","querySelectorAll","currentCardButton","firstChild","currentCardButtonClassList","classList","contains","remove","add","otherCardButton","interval","setName","Paper","colors","colorIndex","handleClickStartGame","m","disableGutters","Grid","container","alignContent","iconArray","temporaryValue","randomIndex","currentIndex","shuffle","i","xs","fullWidth","TextField","autoFocus","label","onChange","target","value","onKeyPress","handleKeyPress","onKeyDown","handleNameMaxLength","placeholder","createMuiTheme","light","dark","App","props","result","setState","handleClickSelectCard","gameTime","handleClickEnterName","state","newLeaderboard","newItem","sort","a","b","parseFloat","localStorage","setItem","JSON","stringify","handleClickClearLeaderboard","removeItem","setLeaderboard","parse","getItem","this","CssBaseline","ThemeProvider","path","exact","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.34e83aeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2cf9q\",\"App-logo\":\"App_App-logo__2p6QD\",\"App-logo-spin\":\"App_App-logo-spin__3tI7N\",\"App-header\":\"App_App-header__3u9Ox\",\"App-link\":\"App_App-link__jhVBd\"};","import React from 'react'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n// Material UI Components\r\nimport { makeStyles, Fade, Box, Icon, Typography, Zoom } from '@material-ui/core';\r\n\r\n// Material UI Custom Style\r\nconst useStyles = makeStyles(theme => ({\r\n    Box: {\r\n        cursor: 'pointer',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        textDecoration: 'none',\r\n    },\r\n    Icon: {\r\n        fontSize: theme.typography.h1.fontSize,\r\n        color: theme.palette.primary.main\r\n    },\r\n}));\r\n\r\nexport default function Start() {\r\n    const Style = useStyles();\r\n    const history = useHistory();\r\n    const [startFadeAnimation, setStartFadeAnimation] = React.useState(true);\r\n    const [typoAnimation, setTypoAnimation] = React.useState(false);\r\n\r\n    // This method will fade out the content and will switch to the selection \"page\"\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        \r\n        setStartFadeAnimation(!startFadeAnimation);\r\n\r\n        setTimeout(() => {\r\n            history.push(\"/game\");\r\n        }, 2000);\r\n    } \r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            setTypoAnimation(true);\r\n        }, 5000);\r\n    }, [setTypoAnimation]);\r\n    \r\n    return (\r\n        <Fade in={startFadeAnimation} timeout={2000}>\r\n            <Box className={Style.Box} p={2} onClick={(event) => handleClick(event)}> \r\n                <Typography variant=\"button\" style={{visibility: \"hidden\"}}>Click anywhere to continue</Typography>\r\n                <Zoom in timeout={4000}>\r\n                    <Icon className={`${Style.Icon} fas fa-bullseye animated logo`} />\r\n                </Zoom>\r\n                <Fade in={typoAnimation} timeout={2000} >\r\n                    <Typography variant=\"button\" color=\"textPrimary\">Click anywhere to continue</Typography>\r\n                </Fade>\r\n            </Box>\r\n        </Fade>\r\n    )\r\n}","import React from 'react'\r\n\r\n// Material UI Components\r\nimport { makeStyles, List, ListItem, ListItemAvatar, Avatar, Button, Icon, ListItemText, DialogContent, DialogActions } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Selected: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover' : {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n    Avatar: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      background: theme.palette.grey[300]\r\n    },\r\n  }));\r\n\r\nexport default function Edit( { cardType, cardTypes, random, onClickSelectCard, handleDialogClose } ) {\r\n    const Style = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DialogContent style={{maxHeight: '500px'}}>\r\n                <List>\r\n                    {\r\n                        cardTypes.map(card => {\r\n                            return(\r\n                                <ListItem \r\n                                    key={card.id} \r\n                                    button \r\n                                    className={cardType !== null && cardType.index === card.index ? Style.Selected : cardType === null && card.index === 0 ? Style.Selected : \"\"}\r\n                                    onMouseDown={handleDialogClose}\r\n                                    onClick={() => onClickSelectCard(card)}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt={card.title} className={Style.Avatar} variant=\"rounded\">\r\n                                            <Icon \r\n                                                className={\r\n                                                    card.title === \"Brands\"\r\n                                                        ? `fab ${card.icons[random]}`\r\n                                                            : `fas ${card.icons[random]}`\r\n                                                    } \r\n                                                style={{width: 'auto'}} \r\n                                                color=\"primary\" />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={card.title} variant=\"h1\" />\r\n                                </ListItem>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"inherit\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onMouseDown={handleDialogClose} onClick={() => onClickSelectCard(cardTypes[random])} color=\"primary\">\r\n                        Random\r\n                    </Button>\r\n                </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Material UI Components\r\nimport { makeStyles, List, ListItem, Typography, Button, DialogContent, DialogActions, Hidden } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Selected: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover' : {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    Second: {\r\n        color: theme.palette.primary.main,\r\n        '&:hover' : {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n    Container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    Button: {\r\n        color: theme.palette.error.main\r\n    },\r\n  }));\r\n\r\nexport default function Leaderboard( { leaderboard, handleDialogClose, onClickClearLeaderboard } ) {\r\n    const Style = useStyles();\r\n\r\n    const handleCutName = (name) => {\r\n        const nameArray = name.split(\"\");\r\n        const newNameArray = nameArray.slice(0, 5);\r\n        const newName = newNameArray.join(\"\");\r\n\r\n        return `${newName}...`\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DialogContent style={{maxHeight: '500px', minWidth: '300px', maxWidth: '750px'}}>\r\n                <List>\r\n                    {\r\n                        leaderboard.map((item, index) => {\r\n                            return(\r\n                                <ListItem \r\n                                    key={item.id} \r\n                                    className={item.id === leaderboard[0].id ? `${Style.Selected} ${Style.Container}` : item.id === leaderboard[1].id ? `${Style.Second} ${Style.Container}` : Style.Container}\r\n                                    divider\r\n                                >\r\n                                    <div className={Style.Container} style={{justifyContent: 'stretch'}}>\r\n                                        <Typography variant=\"h6\" style={{marginRight: '0.5rem', fontWeight: 'normal'}}>{`${index + 1}.`}</Typography>\r\n                                        <Hidden smUp>\r\n                                            <Typography variant={item.id === leaderboard[0].id ? \"h4\" : item.id === leaderboard[1].id ? \"h5\" : \"h6\" }>{item.name.length >= 5 ? handleCutName(item.name) : item.name}</Typography>\r\n                                        </Hidden>\r\n                                        <Hidden xsDown>\r\n                                            <Typography variant={item.id === leaderboard[0].id ? \"h3\" : item.id === leaderboard[1].id ? \"h4\" : \"h6\" }>{item.name}</Typography>\r\n                                        </Hidden>\r\n                                    </div>\r\n                                    <Hidden smUp>\r\n                                        <Typography variant=\"h6\" style={{marginLeft: '2.25rem'}}>{item.time}s</Typography>\r\n                                    </Hidden>\r\n                                    <Hidden xsDown>\r\n                                        <Typography variant=\"h6\" style={{marginLeft: '2.25rem'}}>{item.time}s</Typography>\r\n                                    </Hidden>\r\n                                </ListItem>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"inherit\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button className={Style.Button} onMouseDown={handleDialogClose} onClick={() => onClickClearLeaderboard()} disabled={leaderboard.length <= 0 ? true : false}>\r\n                        Clear\r\n                    </Button>\r\n                </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Material UI Components\r\nimport { makeStyles, DialogContentText, Button, DialogContent, DialogActions } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Button: {\r\n        color: theme.palette.error.main\r\n    },\r\n}));\r\n\r\nexport default function Restart( {handleDialogClose} ) {\r\n    const Style = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                    <DialogContentText id=\"alertDescription\">Are you sure you want to restart the game?</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"inherit\">\r\n                        No\r\n                    </Button>\r\n                    <Button className={Style.Button} onMouseDown={handleDialogClose} onClick={() => {window.location.reload(false)}}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","const cardTypes = [\r\n    {\r\n        id: Math.random(),\r\n        title: 'Animals',\r\n        icons: [\r\n            \"fa-cat\", \"fa-cat\",\r\n            \"fa-dog\", \"fa-dog\",\r\n            \"fa-hippo\", \"fa-hippo\",\r\n            \"fa-fish\", \"fa-fish\",\r\n            \"fa-horse\", \"fa-horse\",\r\n            \"fa-dove\", \"fa-dove\",\r\n            \"fa-frog\", \"fa-frog\",\r\n            \"fa-crow\", \"fa-crow\"\r\n        ],\r\n        index: 0\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Brands',\r\n        icons: [\r\n            \"fa-apple\", \"fa-apple\",\r\n            \"fa-amazon\", \"fa-amazon\",\r\n            \"fa-facebook-f\", \"fa-facebook-f\",\r\n            \"fa-behance\", \"fa-behance\",\r\n            \"fa-react\", \"fa-react\",\r\n            \"fa-js\", \"fa-js\",\r\n            \"fa-github\", \"fa-github\",\r\n            \"fa-google\", \"fa-google\"\r\n        ],\r\n        index: 1\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Buildings',\r\n        icons:     [\r\n            \"fa-campground\", \"fa-campground\",\r\n            \"fa-church\", \"fa-church\",\r\n            \"fa-hospital\", \"fa-hospital\",\r\n            \"fa-igloo\", \"fa-igloo\",\r\n            \"fa-industry\", \"fa-industry\",\r\n            \"fa-monument\", \"fa-monument\",\r\n            \"fa-mosque\", \"fa-mosque\",\r\n            \"fa-vihara\", \"fa-vihara\"\r\n        ],\r\n        index: 2\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Construction',\r\n        icons:     [\r\n            \"fa-brush\", \"fa-brush\",\r\n            \"fa-drafting-compass\", \"fa-drafting-compass\",\r\n            \"fa-hammer\", \"fa-hammer\",\r\n            \"fa-hard-hat\", \"fa-hard-hat\",\r\n            \"fa-paint-roller\", \"fa-paint-roller\",\r\n            \"fa-screwdriver\", \"fa-screwdriver\",\r\n            \"fa-wrench\", \"fa-wrench\",\r\n            \"fa-ruler\", \"fa-ruler\"\r\n        ],\r\n        index: 3\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Currency',\r\n        icons:     [\r\n            \"fa-dollar-sign\", \"fa-dollar-sign\",\r\n            \"fa-euro-sign\", \"fa-euro-sign\",\r\n            \"fa-pound-sign\", \"fa-pound-sign\",\r\n            \"fa-yen-sign\", \"fa-yen-sign\",\r\n            \"fa-won-sign\", \"fa-won-sign\",\r\n            \"fa-rupee-sign\", \"fa-rupee-sign\",\r\n            \"fa-tenge\", \"fa-tenge\",\r\n            \"fa-ruble-sign\", \"fa-ruble-sign\",\r\n        ],\r\n        index: 4\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Emoji',\r\n        icons:     [\r\n            \"fa-grin\", \"fa-grin\",\r\n            \"fa-angry\", \"fa-angry\",\r\n            \"fa-dizzy\", \"fa-dizzy\",\r\n            \"fa-flushed\", \"fa-flushed\",\r\n            \"fa-grimace\", \"fa-grimace\",\r\n            \"fa-grin-beam\", \"fa-grin-beam\",\r\n            \"fa-grin-hearts\", \"fa-grin-hearts\",\r\n            \"fa-grin-tongue-squint\", \"fa-grin-tongue-squint\"\r\n        ],\r\n        index: 5\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Food',\r\n        icons:     [\r\n            \"fa-bacon\", \"fa-bacon\",\r\n            \"fa-carrot\", \"fa-carrot\",\r\n            \"fa-drumstick-bite\", \"fa-drumstick-bite\",\r\n            \"fa-egg\", \"fa-egg\",\r\n            \"fa-hamburger\", \"fa-hamburger\",\r\n            \"fa-hotdog\", \"fa-hotdog\",\r\n            \"fa-ice-cream\", \"fa-ice-cream\",\r\n            \"fa-pizza-slice\", \"fa-pizza-slice\"\r\n        ],\r\n        index: 6\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Maths',\r\n        icons:     [\r\n            \"fa-divide\", \"fa-divide\",\r\n            \"fa-equals\", \"fa-equals\",\r\n            \"fa-infinity\", \"fa-infinity\",\r\n            \"fa-minus\", \"fa-minus\",\r\n            \"fa-percentage\", \"fa-percentage\",\r\n            \"fa-plus\", \"fa-plus\",\r\n            \"fa-times\", \"fa-times\",\r\n            \"fa-square-root-alt\", \"fa-square-root-alt\"\r\n        ],\r\n        index: 7\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Sports',\r\n        icons:     [\r\n            \"fa-baseball-ball\", \"fa-baseball-ball\",\r\n            \"fa-basketball-ball\", \"fa-basketball-ball\",\r\n            \"fa-bowling-ball\", \"fa-bowling-ball\",\r\n            \"fa-football-ball\", \"fa-football-ball\",\r\n            \"fa-table-tennis\", \"fa-table-tennis\",\r\n            \"fa-volleyball-ball\", \"fa-volleyball-ball\",\r\n            \"fa-futbol\", \"fa-futbol\",\r\n            \"fa-golf-ball\", \"fa-golf-ball\"\r\n        ],\r\n        index: 8\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Vehicles',\r\n        icons:     [\r\n            \"fa-bus\", \"fa-bus\",\r\n            \"fa-car\", \"fa-car\",\r\n            \"fa-subway\", \"fa-subway\",\r\n            \"fa-ship\", \"fa-ship\",\r\n            \"fa-taxi\", \"fa-taxi\",\r\n            \"fa-train\", \"fa-train\",\r\n            \"fa-wheelchair\", \"fa-wheelchair\",\r\n            \"fa-bicycle\", \"fa-bicycle\"\r\n        ],\r\n        index: 9\r\n    },\r\n]\r\n\r\nexport default cardTypes;","import React from 'react'\r\n\r\n// Components\r\nimport Edit from './DialogContentTypes/Edit/Edit';\r\nimport Leaderboard from './DialogContentTypes/Leaderboard/Leaderboard';\r\nimport Restart from './DialogContentTypes/Restart/Restart.js';\r\n\r\n// Card Types\r\nimport cardTypes from '../../cardTypes';\r\n\r\n// Material UI Components\r\nimport { makeStyles, AppBar, Toolbar, Typography, Tooltip, Button, Icon, Dialog, DialogTitle, Fade, IconButton } from '@material-ui/core';\r\n\r\n// Material UI Custom Style\r\nconst useStyles = makeStyles(theme => ({\r\n    AppBar: {\r\n        position: 'relative',\r\n        zIndex: 1000,\r\n        background: theme.palette.background.default\r\n    },\r\n    Toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    Icon: {\r\n        width: '100%'\r\n    },\r\n    Orange: {\r\n        color: '#F39C12'\r\n    },\r\n    Yellow: {\r\n        color: '#F1C40F'\r\n    },\r\n    Teal: {\r\n        color: '#1ABC9C'\r\n    },\r\n    Red: {\r\n        color: '#E74C3C'\r\n    },\r\n    Button: {\r\n        color: theme.palette.error.main\r\n    },\r\n}));\r\n\r\nexport default function Header( { cardType, gameState, leaderboard, onClickSelectCard, handleGetSeconds, onClickClearLeaderboard } ) {\r\n    const Style = useStyles();\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [dialogType, setDialogType] = React.useState(null);\r\n\r\n    let [randomIcon, setRandomIcon] = React.useState(null);\r\n\r\n    const [startTimer, setStartTimer] = React.useState(false);\r\n    let [time, setTime] = React.useState(0);\r\n\r\n    const handleClickDialogOpen = (type) => {\r\n        setOpenDialog(true);\r\n        setDialogType(type)\r\n    };\r\n    \r\n    const handleDialogClose = () => {\r\n        setOpenDialog(false);\r\n        setRandomIcon(null);\r\n    };\r\n\r\n    if(gameState === \"Started\"){\r\n        setTimeout(() => {\r\n            setStartTimer(true)\r\n        }, 5000);\r\n    }else if(gameState === \"Ended\"){\r\n        setTimeout(() => {\r\n            setStartTimer(false)\r\n        }, 0);\r\n    }\r\n\r\n    const random = Math.floor(Math.random() * Math.floor(15));\r\n\r\n    React.useEffect(() => {\r\n        let timerinterval;\r\n        let iconinterval;\r\n        let seconds = 5000;\r\n        \r\n        if(gameState !== \"Started\"){\r\n            iconinterval = setInterval(() => {\r\n                const newRandom = Math.floor(Math.random() * Math.floor(15));\r\n                setRandomIcon(() => {\r\n                    return(\r\n                        cardType === null \r\n                            ? `fas ${cardTypes[0].icons[newRandom]}`\r\n                                : cardType.title === \"Brands\"\r\n                                    ? `fab ${cardType.icons[newRandom]}`\r\n                                        : `fas ${cardType.icons[newRandom]}`\r\n                )})\r\n            }, randomIcon === null ? 50 : seconds);\r\n        }\r\n\r\n        if(startTimer === true){\r\n            timerinterval = setInterval(() => {\r\n                setTime(newTime => newTime + 1);\r\n            }, 1000); \r\n        }\r\n\r\n        if(gameState === \"Ended\"){\r\n            handleGetSeconds(time);\r\n        }\r\n\r\n        return () => {clearInterval(iconinterval); clearInterval(timerinterval);};\r\n    }, [gameState, setRandomIcon, cardType, random, randomIcon, startTimer, setTime, time, handleGetSeconds]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar className={Style.AppBar} color=\"transparent\" position=\"static\" variant=\"outlined\" square>\r\n                <Toolbar className={Style.Toolbar}>\r\n                    {\r\n                        gameState === \"Started\" || gameState === \"Ended\"\r\n                            ? <Fade in timeout={5000}>\r\n                                   <Typography color=\"primary\" variant=\"h6\">{time}<span>s</span></Typography>\r\n                                </Fade>\r\n                                :\r\n                                <Tooltip title=\"Change Card Type\" placement=\"right\">\r\n                                    <span>\r\n                                        <IconButton aria-label=\"Change Card Type\" color=\"primary\" variant=\"text\" edge=\"start\" onClick={() => handleClickDialogOpen(\"Edit\")}>\r\n                                            <Icon \r\n                                                className={randomIcon} \r\n                                                style={{width: 'auto'}} \r\n                                                color=\"primary\" />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                    }\r\n                    <Button aria-label=\"Logo\" color=\"inherit\" disableFocusRipple size=\"large\" variant=\"text\">\r\n                        <span className={Style.Orange}>Con</span>\r\n                        <span className={Style.Yellow}>cen</span>\r\n                        <span className={Style.Teal}>tra</span>\r\n                        <span className={Style.Red}>tion</span>\r\n                    </Button>\r\n                    <Tooltip title={gameState === \"Started\" || gameState === \"Ended\" ? \"Restart Game\" : \"Leaderboard\"} placement=\"left\">\r\n                        <span>\r\n                            {\r\n                                gameState === \"Started\" || gameState === \"Ended\"\r\n                                    ? <Fade in timeout={5000}>\r\n                                        <IconButton aria-label=\"Restart Game\" className={Style.Button} variant=\"text\" edge=\"end\" onClick={() => handleClickDialogOpen(\"Restart\")}>\r\n                                            <Icon className={`${Style.Icon} fas fa-undo-alt`} />\r\n                                        </IconButton>\r\n                                    </Fade>\r\n                                        : \r\n                                        <IconButton aria-label=\"Leaderboard\" color=\"secondary\" variant=\"text\" edge=\"end\" onClick={() => handleClickDialogOpen(\"Leaderboard\")}>\r\n                                            <Icon className={`${Style.Icon} fas fa-trophy`} />\r\n                                        </IconButton>\r\n                                        \r\n\r\n                            }\r\n                        </span>\r\n                    </Tooltip>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={handleDialogClose}\r\n                aria-labelledby=\"dialogTitle\"\r\n            >\r\n                <DialogTitle id=\"dialogTitle\">\r\n                    {\r\n                        dialogType === \"Edit\" \r\n                            ? \"Change Card Type\"\r\n                                : dialogType === \"Leaderboard\" \r\n                                    ? \"Leaderboard\"\r\n                                        : dialogType === \"Restart\" \r\n                                            ? \"Restart Game\"\r\n                                                : \"\"\r\n                    }\r\n                </DialogTitle>\r\n                {\r\n                    dialogType === \"Edit\" \r\n                        ? <Edit cardType={cardType} cardTypes={cardTypes} random={random} onClickSelectCard={onClickSelectCard} handleDialogClose={handleDialogClose} />\r\n                            : dialogType === \"Leaderboard\" \r\n                                ? <Leaderboard leaderboard={leaderboard} handleDialogClose={handleDialogClose} onClickClearLeaderboard={onClickClearLeaderboard} />\r\n                                    : dialogType === \"Restart\" \r\n                                        ? <Restart leaderboard={leaderboard} handleDialogClose={handleDialogClose} onClickClearLeaderboard={onClickClearLeaderboard} />\r\n                                            : \"\"\r\n                }\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Material UI Components\r\nimport { makeStyles, Backdrop, Box, Container, Paper, Fade, Typography, Grid, Button, Hidden, Icon, Dialog, TextField, DialogContent, DialogActions } from '@material-ui/core';\r\n\r\n// Material UI Custom Style\r\nconst useStyles = makeStyles(theme => ({\r\n    Backdrop: {\r\n        zIndex: '1'\r\n    },\r\n    Hidden: {\r\n        visibility: 'hidden'\r\n    },\r\n    Visible: {\r\n        visibility: 'visible'\r\n    },\r\n    Button: {\r\n        color: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[0],\r\n        '&:hover': {\r\n            boxShadow: theme.shadows[0],\r\n        }\r\n    },\r\n    ButtonSmall: {\r\n        padding: theme.spacing(2.5, 1)\r\n    },\r\n    ButtonLarge: {\r\n        padding: theme.spacing(4, 1)\r\n    },\r\n    Icon: {\r\n        width: '100%'\r\n    },\r\n    Close: {\r\n        '& span': {\r\n            visibility: 'hidden'\r\n        }\r\n    },\r\n    Open: {\r\n        '& span': {\r\n            visibility: 'visible'\r\n        }\r\n    },\r\n    Match: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: theme.palette.common.white,\r\n\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.success.main,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n    Wrong: {\r\n        backgroundColor: theme.palette.error.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.error.main,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Game( { cardType, handleGame, onClickEnterName, } ) {\r\n    const Style = useStyles();\r\n\r\n    // Backdrop \r\n    const [openBackdrop, setOpenBackdrop] = React.useState(true);\r\n    const [countdownStarted, setCountdownStarted] = React.useState(false);\r\n    let [countdown, setCountdown] = React.useState(5);\r\n    let [countdownColor, setCountdownColor] = React.useState(\"#3498DB\");\r\n    \r\n    // This method will countdown to 0 then will start the game \r\n    const handleClickStartGame = () => {\r\n        setCountdownStarted(true);\r\n        handleGame(\"Started\")\r\n\r\n        const colors = [\"#3498DB\", \"#F39C12\", \"#F1C40F\", \"#1ABC9C\", \"#E74C3C\", \"#3498DB\"]\r\n        let colorIndex = 0;\r\n        \r\n        const interval = setInterval(() => {\r\n            setCountdown(--countdown);\r\n            colorIndex = ++colorIndex;\r\n            setCountdownColor(colors[colorIndex]);\r\n            \r\n            if(countdown <= 0){\r\n                clearInterval(interval);\r\n                setTimeout(() => {\r\n                    setOpenBackdrop(false)\r\n                }, 500);\r\n            }\r\n        }, 1000); \r\n    }\r\n\r\n    // Game\r\n    let openCards = [];\r\n    let matchedCards = [];\r\n\r\n    const iconsArray = (cardType === null) \r\n        ? [\r\n            \"fa-cat\", \"fa-cat\",\r\n            \"fa-dog\", \"fa-dog\",\r\n            \"fa-hippo\", \"fa-hippo\",\r\n            \"fa-fish\", \"fa-fish\",\r\n            \"fa-horse\", \"fa-horse\",\r\n            \"fa-dove\", \"fa-dove\",\r\n            \"fa-frog\", \"fa-frog\",\r\n            \"fa-crow\", \"fa-crow\"\r\n        ]\r\n            : cardType.icons;\r\n\r\n    // Shuffle function from http://stackoverflow.com/a/2450976\r\n    const shuffle = (iconArray) => {\r\n        let currentIndex = iconArray.length, temporaryValue, randomIndex;\r\n\r\n        while (currentIndex !== 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            temporaryValue = iconArray[currentIndex];\r\n            iconArray[currentIndex] = iconArray[randomIndex];\r\n            iconArray[randomIndex] = temporaryValue;\r\n        }\r\n        return iconArray;\r\n    }\r\n\r\n    const handleIconClick = (event, index, icon) => {\r\n        event.preventDefault();\r\n\r\n        if(openCards.length <= 1){\r\n            const allCards = document.querySelectorAll(\".Card\");\r\n            const currentCard = allCards[index - 1];\r\n            const currentCardButton = currentCard.firstChild;\r\n            const currentCardButtonClassList = currentCardButton.classList;\r\n            \r\n            if((!currentCardButtonClassList.contains(Style.Open)) && (!currentCardButtonClassList.contains(Style.Match))){\r\n                currentCardButton.classList.remove(Style.Close)\r\n                currentCardButton.classList.add(Style.Open);\r\n                openCards.push(currentCard);\r\n\r\n                if(openCards.length > 1){\r\n                    const otherCard = openCards[0];\r\n                    const otherCardButton = otherCard.firstChild;\r\n                    const otherCardIconParent = otherCardButton.firstChild;\r\n                    const otherCardIcon = otherCardIconParent.firstChild;\r\n                    const otherCardIconClassList = otherCardIcon.classList;\r\n\r\n                    if(otherCardIconClassList.contains(icon)){\r\n                        currentCardButton.classList.add(Style.Match);\r\n                        otherCardButton.classList.add(Style.Match);\r\n\r\n                        matchedCards.push(otherCardButton);\r\n                        matchedCards.push(currentCardButton);\r\n                        openCards = [];\r\n                    }else{\r\n                        currentCardButton.classList.add(Style.Wrong);\r\n                        otherCardButton.classList.add(Style.Wrong);\r\n\r\n                        setTimeout(() => {\r\n                                currentCardButton.classList.remove(Style.Open, Style.Wrong);\r\n                                otherCardButton.classList.remove(Style.Open, Style.Wrong);\r\n                                currentCardButton.classList.add(Style.Close);\r\n                                otherCardButton.classList.add(Style.Close);\r\n\r\n                                openCards = [];\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let interval;\r\n        \r\n        interval = setInterval(() => {\r\n            if(matchedCards.length === 16){\r\n                clearInterval(interval);\r\n                handleGame(\"Ended\")\r\n                handleClickDialogOpen()\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [matchedCards, handleGame]);\r\n\r\n    // Dialog\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [name, setName] = React.useState('');\r\n\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n            onClickEnterName(name)\r\n            handleDialogClose()\r\n        } else if(event.key === 'Escape'){\r\n            handleDialogClose()\r\n        }\r\n    }\r\n\r\n    // This method will handle the name if the user types a name that is longer than 18 characters long a message will display\r\n    const handleNameMaxLength = (event) => {\r\n        if(name.length > 18){\r\n            if(event.key === \"Backspace\" || event.key === \"Delete\"){\r\n                setName(\"\");\r\n                event.target.value = \"\";\r\n            }else{\r\n                event.target.value = \"Limit of 18 Characters reached.\";\r\n                return\r\n            }\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleClickDialogOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n    \r\n      const handleDialogClose = () => {\r\n        setOpenDialog(false);\r\n        window.location.reload(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop className={Style.Backdrop} open={openBackdrop}>\r\n                <Paper variant=\"outlined\">\r\n                    <Box p={6}>\r\n                        {\r\n                            countdownStarted === false\r\n                                ? <Button aria-label=\"Start\" color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => handleClickStartGame()}>Start Game</Button>\r\n                                    : <Typography className=\"countDownElement animated fadeIn\" variant=\"h1\" style={{color: countdownColor, fontWeight: '500'}} >{countdown === 0 ? \"GO\" : countdown}</Typography>\r\n                        }\r\n                    </Box>\r\n                </Paper>\r\n            </Backdrop>\r\n            <Fade in={openBackdrop === true ? false : true} timeout={2000} >\r\n                <Box className={openBackdrop === true ? Style.Hidden : Style.Visible} m={2}>\r\n                    <Container maxWidth=\"sm\" disableGutters>\r\n                        <Grid container spacing={1} variant=\"outlined\" alignContent=\"center\" alignItems=\"center\">\r\n                            {\r\n                                shuffle(iconsArray).map((i, index) => {\r\n                                    return(\r\n                                        <Grid className=\"Card\" key={Math.random()} item xs={3}>\r\n                                                <Hidden smUp>\r\n                                                    <Button className={`${Style.Button} ${Style.ButtonSmall} ${Style.Close}`} variant=\"contained\" size=\"large\" fullWidth onMouseDown={(event) => handleIconClick(event, index + 1, i)}>\r\n                                                        <Icon \r\n                                                            className={\r\n                                                                cardType === null\r\n                                                                    ? `fas ${i} ${Style.Icon}`\r\n                                                                        : cardType.title === \"Brands\"\r\n                                                                            ? `fab ${i} ${Style.Icon}`\r\n                                                                                : `fas ${i} ${Style.Icon}`\r\n                                                            } \r\n                                                            style={{fontSize: '2.25rem'}}></Icon>\r\n                                                    </Button>\r\n                                                </Hidden>\r\n                                                <Hidden xsDown>\r\n                                                    <Button className={`${Style.Button} ${Style.ButtonLarge} ${Style.Close}`} variant=\"contained\" size=\"large\" fullWidth onMouseDown={(event) => handleIconClick(event, index + 1, i)}> \r\n                                                        <Icon \r\n                                                            className={\r\n                                                                cardType === null\r\n                                                                    ? `fas ${i} ${Style.Icon}`\r\n                                                                        : cardType.title === \"Brands\"\r\n                                                                            ? `fab ${i} ${Style.Icon}`\r\n                                                                                : `fas ${i} ${Style.Icon}`\r\n                                                            } \r\n                                                            style={{fontSize: '3.375rem'}}>\r\n                                                        </Icon>\r\n                                                    </Button>\r\n                                                </Hidden>\r\n                                        </Grid>\r\n                                    );\r\n                                })\r\n                            } \r\n                        </Grid>\r\n                    </Container>\r\n                </Box>\r\n            </Fade>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={handleDialogClose}\r\n                aria-labelledby=\"dialogTitle\"\r\n            >\r\n                <DialogContent style={{maxHeight: '500px'}}>\r\n                    <Typography color=\"primary\" variant=\"h4\">Congratulations</Typography>\r\n                    <Typography color=\"textPrimary\" variant=\"body1\">You have set a new time</Typography>\r\n                    <TextField\r\n                        autoFocus\r\n                        id=\"name\"\r\n                        label=\"Enter Name\"\r\n                        type=\"text\"\r\n                        onChange={(event) => setName(event.target.value)}\r\n                        onKeyPress={(event) => handleKeyPress(event)}\r\n                        onKeyDown={(event) => handleNameMaxLength(event)}\r\n                        value={name}\r\n                        placeholder='Try \"John\"'\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"inherit\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onMouseDown={handleDialogClose} onClick={() => onClickEnterName(name)} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\n\n// Components\nimport Start from '../components/Start/Start';\nimport Header from '../components/Header/Header';\n// import Selection from '../components/Selection/Selection';\nimport Game from '../components/Game/Game';\n\n// Material UI Components\nimport { ThemeProvider, Container, Fade } from '@material-ui/core';\n\n// Style sheet\nimport Style from './App.module.scss';\n\n// Material UI Custom Theme\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#85C1E9',\n      main: '#3498DB',\n      dark: '#2874A6',\n    },\n    secondary: {\n      light: '#F7DC6F',\n      main: '#F1C40F',\n      dark: '#B7950B',\n    },\n    success: {\n      light: '#82E0AA',\n      main: '#2ECC71',\n      dark: '#239B56',\n    },\n    error: {\n      light: '#F1948A',\n      main: '#E74C3C',\n      dark: '#B03A2E',\n    },\n  },\n});\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      cardType: null,\n      gameState: '',\n      gameTime: null,\n      leaderboard: [],\n    }\n  }\n\n  static propTypes = {\n    cardType: PropTypes.object,\n    gameState: PropTypes.string,\n    gameTime: PropTypes.number,\n    leaderboard: PropTypes.array,\n  }\n\n  componentDidMount(){\n    // Will set a variables with the value of the local storage \n    const setLeaderboard = JSON.parse(localStorage.getItem(\"Leaderboard\") || \"[]\");\n\n    this.setState({\n      leaderboard: setLeaderboard,\n    })\n  }\n\n  handleGame = (result) => {\n    this.setState({\n      gameState: result\n    })\n  }\n\n  handleClickSelectCard = (card) => {\n    this.setState({\n      cardType: card\n    })\n  }\n\n  handleGetSeconds = (time) => {\n    this.setState({\n      gameState: '',\n      gameTime: time\n    })\n  }\n\n  handleClickEnterName = (name) => {\n    const time = this.state.gameTime;\n    const newLeaderboard = [...this.state.leaderboard];\n\n    const newItem = {\n      id: Math.random(),\n      name: name,\n      time: time\n    };\n\n    newLeaderboard.push(newItem);\n\n    newLeaderboard.sort((a, b) => parseFloat(a.time) - parseFloat(b.time));\n\n    // Setting the leaderboard array into our local storage\n    localStorage.setItem(\"Leaderboard\", JSON.stringify(newLeaderboard));\n\n    this.setState({\n      cardType: null,\n      gameState: '',\n      gameTime: null,\n      leaderboard: newLeaderboard,\n    })\n\n    window.location.reload(false);\n  }\n\n  // This method will clear the leaderboard\n  handleClickClearLeaderboard = () => {\n    // Deleting the Leaderboard item from local storage\n    localStorage.removeItem(\"Leaderboard\")\n\n    this.setState({\n      leaderboard: []\n    })\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Container className={Style.Container} maxWidth=\"md\" disableGutters>\n              <Switch>\n                <Route path=\"/game\">\n                  <Fade in timeout={2000}>\n                    <div>\n                      <Header \n                        cardType={this.state.cardType} \n                        gameState={this.state.gameState} \n                        leaderboard={this.state.leaderboard} \n                        onClickSelectCard={this.handleClickSelectCard} \n                        handleGetSeconds={this.handleGetSeconds} \n                        onClickClearLeaderboard={this.handleClickClearLeaderboard} />\n                      <Game \n                        cardType={this.state.cardType} \n                        handleGame={this.handleGame} \n                        onClickEnterName={this.handleClickEnterName} />\n                    </div>\n                  </Fade>\n                </Route>\n                <Route exact path=\"/\">\n                  <Start />\n                </Route>\n              </Switch>\n            </Container>\n          </Router>\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport App from './container/App';\n\n// Style sheet\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}