{"version":3,"sources":["components/Start/Start.js","components/Header/DialogContentTypes/Edit/Edit.js","components/Header/DialogContentTypes/Leaderboard/Leaderboard.js","components/Header/DialogContentTypes/Stop/Stop.js","cardTypes.js","components/Header/Header.js","components/Game/Game.js","container/App.js","index.js","audio/intro.wav","audio/soundOn.wav","audio/soundOff.wav","audio/countdownNum.wav","audio/countdown0.wav","audio/match.wav","audio/wrong.wav","audio/finished.wav"],"names":["useStyles","makeStyles","theme","Box","cursor","height","display","flexDirection","alignItems","justifyContent","textDecoration","Icon","fontSize","typography","h1","color","palette","primary","main","Start","volume","Style","history","useHistory","React","useState","startFadeAnimation","setStartFadeAnimation","typoAnimation","setTypoAnimation","introSound","Audio","IntroSound","useEffect","timeout","setTimeout","clearTimeout","Fade","in","className","p","onClick","event","preventDefault","play","push","handleClick","Typography","variant","style","visibility","Zoom","Selected","background","common","white","Avatar","width","spacing","grey","Edit","cardType","cardTypes","random","onClickSelectCard","handleDialogClose","Fragment","DialogContent","maxHeight","List","map","card","ListItem","key","id","button","index","onMouseDown","ListItemAvatar","alt","title","icons","ListItemText","DialogActions","Button","Container","error","dark","Leaderboard","leaderboard","onClickClearLeaderboard","item","divider","marginRight","fontWeight","Hidden","smUp","name","length","newName","split","slice","join","handleCutName","xsDown","marginLeft","time","disabled","Restart","DialogContentText","window","location","reload","Math","AppBar","position","zIndex","default","Toolbar","SetSize","pxToRem","secondary","Header","gameState","soundState","handleGetSeconds","onClickToggleSound","onChangeHandleSliderChange","soundOnSound","soundOn","soundOffSound","soundOff","newVolume","randomIcon","setRandomIcon","startTimer","setStartTimer","setTime","floor","timerinterval","iconinterval","setInterval","newRandom","clearInterval","newTime","anchorEl","setAnchorEl","openPopover","Boolean","popoverID","undefined","sliderValue","setSliderValue","openDialog","setOpenDialog","dialogType","setDialogType","handleClickDialogOpen","type","square","disableGutters","Tooltip","placement","IconButton","aria-label","edge","textTransform","Orange","Yellow","Teal","Red","currentTarget","Popover","open","onClose","elevation","anchorOrigin","vertical","horizontal","transformOrigin","TransitionComponent","transitionDuration","m","gutterBottom","Slider","aria-labelledby","value","valueLabelDisplay","step","marks","onChange","newValue","SliderBlue","SliderYellow","SliderRed","SoundButtonOff","SoundButtonOn","fullWidth","Dialog","DialogTitle","Backdrop","Countdown","CountdownHeader","DispNone","Disp","Visible","boxShadow","shadows","ButtonSmall","padding","ButtonLarge","Close","Open","Match","backgroundColor","success","Wrong","Game","handleGameState","onClickEnterName","countdownNumSound","CountdownNumSound","countdown0Sound","Countdown0Sound","matchSound","MatchSound","wrongSound","WrongSound","finishedSound","FinishedSound","openBackdrop","setOpenBackdrop","countdown","setCountdown","openCards","matchedCards","iconsArray","handleIconClick","icon","pause","currentTime","currentCard","document","querySelectorAll","currentCardButton","firstChild","currentCardButtonClassList","classList","contains","remove","add","otherCardButton","playbackRate","interval","setName","Paper","size","colorIndex","handleClickStartGame","maxWidth","Grid","container","alignContent","iconArray","temporaryValue","randomIndex","currentIndex","shuffle","i","xs","fullScreen","pt","TextField","margin","label","target","onKeyDown","handleNameMaxLength","placeholder","createMuiTheme","light","App","props","phase","setState","handleClickSelectCard","localStorage","setItem","JSON","stringify","gameTime","handleClickToggleSound","state","HandleSliderChange","num","parseFloat","handleClickEnterName","newLeaderboard","newItem","sort","a","b","handleClickClearLeaderboard","removeItem","setLeaderboard","parse","getItem","setSoundState","setVolume","setCardType","this","CssBaseline","ThemeProvider","path","exact","Component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8f6b6b99.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n// Audio\r\nimport IntroSound from '../../audio/intro.wav';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Fade, Box, Icon, Typography, Zoom } from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(theme => ({\r\n    Box: {\r\n        cursor: 'pointer',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        textDecoration: 'none',\r\n    },\r\n    Icon: {\r\n        fontSize: theme.typography.h1.fontSize,\r\n        color: theme.palette.primary.main\r\n    },\r\n}));\r\n\r\nexport default function Start( {volume} ) {\r\n    const Style = useStyles();\r\n    const history = useHistory();\r\n    const [startFadeAnimation, setStartFadeAnimation] = React.useState(true);\r\n    const [typoAnimation, setTypoAnimation] = React.useState(false);\r\n\r\n    // Audio\r\n    const introSound = new Audio(IntroSound);\r\n    \r\n    // Volume\r\n    introSound.volume = volume;\r\n    \r\n    // This method will fade out the content and will switch to the selection \"page\"\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        \r\n        introSound.play();\r\n\r\n        setStartFadeAnimation(!startFadeAnimation);\r\n\r\n        setTimeout(() => {\r\n            history.push(\"/game\");\r\n        }, 2000);\r\n    } \r\n\r\n    React.useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setTypoAnimation(true);\r\n        }, 5000);\r\n\r\n        return () => clearTimeout(timeout); \r\n    }, [setTypoAnimation]);\r\n    \r\n    return (\r\n        <Fade in={startFadeAnimation} timeout={2000}>\r\n            <Box className={Style.Box} p={2} onClick={(event) => handleClick(event)}> \r\n                <Typography variant=\"button\" style={{visibility: \"hidden\"}}>Click anywhere to continue</Typography>\r\n                <Zoom in timeout={4000}>\r\n                    <Icon className={`${Style.Icon} fas fa-bullseye logo`} />\r\n                </Zoom>\r\n                <Fade in={typoAnimation} timeout={2000} >\r\n                    <Typography variant=\"button\" color=\"textPrimary\">Click anywhere to continue</Typography>\r\n                </Fade>\r\n            </Box>\r\n        </Fade>\r\n    )\r\n}","import React from 'react'\r\n\r\n// Material UI Components\r\nimport { makeStyles, List, ListItem, ListItemAvatar, Avatar, Button, Icon, ListItemText, DialogContent, DialogActions } from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(theme => ({\r\n    Selected: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover' : {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n    Avatar: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      background: theme.palette.grey[300]\r\n    },\r\n  }));\r\n\r\nexport default function Edit( { cardType, cardTypes, random, onClickSelectCard, handleDialogClose } ) {\r\n    const Style = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DialogContent style={{maxHeight: '500px'}}>\r\n                <List>\r\n                    {\r\n                        cardTypes.map(card => {\r\n                            return(\r\n                                <ListItem \r\n                                    key={card.id} \r\n                                    button \r\n                                    className={cardType !== null && cardType.index === card.index ? Style.Selected : cardType === null && card.index === 0 ? Style.Selected : \"\"}\r\n                                    onMouseDown={handleDialogClose}\r\n                                    onClick={() => onClickSelectCard(card)}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt={card.title} className={Style.Avatar} variant=\"rounded\">\r\n                                            <Icon \r\n                                                className={\r\n                                                    card.title === \"Brands\"\r\n                                                        ? `fab ${card.icons[random]}`\r\n                                                            : `fas ${card.icons[random]}`\r\n                                                    } \r\n                                                style={{width: 'auto'}} \r\n                                                color=\"primary\" />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={card.title} variant=\"h1\" />\r\n                                </ListItem>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"inherit\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => onClickSelectCard(cardTypes[random])} color=\"primary\" variant=\"contained\">\r\n                        Random\r\n                    </Button>\r\n                </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Material UI Components\r\nimport { makeStyles, List, ListItem, Typography, Button, DialogContent, DialogActions, Hidden } from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(theme => ({\r\n    Selected: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover' : {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n    Container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    Button: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover' : {\r\n            background: theme.palette.error.dark,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n  }));\r\n\r\nexport default function Leaderboard( { leaderboard, handleDialogClose, onClickClearLeaderboard } ) {\r\n    const Style = useStyles();\r\n\r\n    // This method will cut the name to 5 characters long and will add the ... at then end to signify that there are hidden characters\r\n    const handleCutName = (name) => {\r\n        const nameArray = name.split(\"\");\r\n        const newNameArray = nameArray.slice(0, 5);\r\n        const newName = newNameArray.join(\"\");\r\n\r\n        return `${newName}...`\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DialogContent style={{maxHeight: '500px'}}>\r\n                <List>\r\n                    {\r\n                        leaderboard.map((item, index) => {\r\n                            return(\r\n                                <ListItem \r\n                                    key={item.id} \r\n                                    className={item.id === leaderboard[0].id ? `${Style.Selected} ${Style.Container}` : Style.Container}\r\n                                    divider\r\n                                >\r\n                                    <div className={Style.Container} style={{justifyContent: 'stretch'}}>\r\n                                        <Typography variant=\"body1\" color=\"textSecondary\" style={{marginRight: '0.5rem', fontWeight: 'normal'}}>{`${index + 1})`}</Typography>\r\n                                        <Hidden smUp>\r\n                                            <Typography variant=\"h6\">{item.name.length > 5 ? handleCutName(item.name) : item.name}</Typography>\r\n                                        </Hidden>\r\n                                        <Hidden xsDown>\r\n                                            <Typography variant=\"h6\">{item.name}</Typography>\r\n                                        </Hidden>\r\n                                    </div>\r\n                                    <Typography variant=\"body1\" style={{marginLeft: '2.25rem'}}>{item.time}s</Typography>\r\n                                </ListItem>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"inherit\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button className={Style.Button} variant=\"contained\" onClick={() => onClickClearLeaderboard()} disabled={leaderboard.length <= 0 ? true : false} >\r\n                        Clear\r\n                    </Button>\r\n                </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Material UI Components\r\nimport { makeStyles, DialogContentText, Button, DialogContent, DialogActions } from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(theme => ({\r\n    Button: {\r\n        color: theme.palette.error.main\r\n    },\r\n}));\r\n\r\nexport default function Restart( {handleDialogClose} ) {\r\n    const Style = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                    <DialogContentText id=\"alertDescription\">Are you sure you want to stop the game?</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"inherit\">\r\n                        No\r\n                    </Button>\r\n                    <Button className={Style.Button} onMouseDown={handleDialogClose} onClick={() => {window.location.reload(false)}}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","const cardTypes = [\r\n    {\r\n        id: Math.random(),\r\n        title: 'Animals',\r\n        icons: [\r\n            \"fa-cat\", \"fa-cat\",\r\n            \"fa-dog\", \"fa-dog\",\r\n            \"fa-hippo\", \"fa-hippo\",\r\n            \"fa-fish\", \"fa-fish\",\r\n            \"fa-horse\", \"fa-horse\",\r\n            \"fa-dove\", \"fa-dove\",\r\n            \"fa-frog\", \"fa-frog\",\r\n            \"fa-crow\", \"fa-crow\"\r\n        ],\r\n        index: 0\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Brands',\r\n        icons: [\r\n            \"fa-apple\", \"fa-apple\",\r\n            \"fa-amazon\", \"fa-amazon\",\r\n            \"fa-facebook-f\", \"fa-facebook-f\",\r\n            \"fa-behance\", \"fa-behance\",\r\n            \"fa-react\", \"fa-react\",\r\n            \"fa-js\", \"fa-js\",\r\n            \"fa-github\", \"fa-github\",\r\n            \"fa-google\", \"fa-google\"\r\n        ],\r\n        index: 1\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Buildings',\r\n        icons:     [\r\n            \"fa-campground\", \"fa-campground\",\r\n            \"fa-church\", \"fa-church\",\r\n            \"fa-hospital\", \"fa-hospital\",\r\n            \"fa-igloo\", \"fa-igloo\",\r\n            \"fa-industry\", \"fa-industry\",\r\n            \"fa-monument\", \"fa-monument\",\r\n            \"fa-mosque\", \"fa-mosque\",\r\n            \"fa-vihara\", \"fa-vihara\"\r\n        ],\r\n        index: 2\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Construction',\r\n        icons:     [\r\n            \"fa-brush\", \"fa-brush\",\r\n            \"fa-drafting-compass\", \"fa-drafting-compass\",\r\n            \"fa-hammer\", \"fa-hammer\",\r\n            \"fa-hard-hat\", \"fa-hard-hat\",\r\n            \"fa-paint-roller\", \"fa-paint-roller\",\r\n            \"fa-screwdriver\", \"fa-screwdriver\",\r\n            \"fa-wrench\", \"fa-wrench\",\r\n            \"fa-ruler\", \"fa-ruler\"\r\n        ],\r\n        index: 3\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Currency',\r\n        icons:     [\r\n            \"fa-dollar-sign\", \"fa-dollar-sign\",\r\n            \"fa-euro-sign\", \"fa-euro-sign\",\r\n            \"fa-pound-sign\", \"fa-pound-sign\",\r\n            \"fa-yen-sign\", \"fa-yen-sign\",\r\n            \"fa-won-sign\", \"fa-won-sign\",\r\n            \"fa-rupee-sign\", \"fa-rupee-sign\",\r\n            \"fa-tenge\", \"fa-tenge\",\r\n            \"fa-ruble-sign\", \"fa-ruble-sign\",\r\n        ],\r\n        index: 4\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Emoji',\r\n        icons:     [\r\n            \"fa-grin\", \"fa-grin\",\r\n            \"fa-angry\", \"fa-angry\",\r\n            \"fa-dizzy\", \"fa-dizzy\",\r\n            \"fa-flushed\", \"fa-flushed\",\r\n            \"fa-grimace\", \"fa-grimace\",\r\n            \"fa-grin-beam\", \"fa-grin-beam\",\r\n            \"fa-grin-hearts\", \"fa-grin-hearts\",\r\n            \"fa-grin-tongue-squint\", \"fa-grin-tongue-squint\"\r\n        ],\r\n        index: 5\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Food',\r\n        icons:     [\r\n            \"fa-bacon\", \"fa-bacon\",\r\n            \"fa-carrot\", \"fa-carrot\",\r\n            \"fa-drumstick-bite\", \"fa-drumstick-bite\",\r\n            \"fa-egg\", \"fa-egg\",\r\n            \"fa-hamburger\", \"fa-hamburger\",\r\n            \"fa-hotdog\", \"fa-hotdog\",\r\n            \"fa-ice-cream\", \"fa-ice-cream\",\r\n            \"fa-pizza-slice\", \"fa-pizza-slice\"\r\n        ],\r\n        index: 6\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Maths',\r\n        icons:     [\r\n            \"fa-divide\", \"fa-divide\",\r\n            \"fa-equals\", \"fa-equals\",\r\n            \"fa-infinity\", \"fa-infinity\",\r\n            \"fa-minus\", \"fa-minus\",\r\n            \"fa-percentage\", \"fa-percentage\",\r\n            \"fa-plus\", \"fa-plus\",\r\n            \"fa-times\", \"fa-times\",\r\n            \"fa-square-root-alt\", \"fa-square-root-alt\"\r\n        ],\r\n        index: 7\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Sports',\r\n        icons:     [\r\n            \"fa-baseball-ball\", \"fa-baseball-ball\",\r\n            \"fa-basketball-ball\", \"fa-basketball-ball\",\r\n            \"fa-bowling-ball\", \"fa-bowling-ball\",\r\n            \"fa-football-ball\", \"fa-football-ball\",\r\n            \"fa-table-tennis\", \"fa-table-tennis\",\r\n            \"fa-volleyball-ball\", \"fa-volleyball-ball\",\r\n            \"fa-futbol\", \"fa-futbol\",\r\n            \"fa-golf-ball\", \"fa-golf-ball\"\r\n        ],\r\n        index: 8\r\n    },\r\n    {\r\n        id: Math.random(),\r\n        title: 'Vehicles',\r\n        icons:     [\r\n            \"fa-bus\", \"fa-bus\",\r\n            \"fa-car\", \"fa-car\",\r\n            \"fa-subway\", \"fa-subway\",\r\n            \"fa-ship\", \"fa-ship\",\r\n            \"fa-taxi\", \"fa-taxi\",\r\n            \"fa-train\", \"fa-train\",\r\n            \"fa-wheelchair\", \"fa-wheelchair\",\r\n            \"fa-bicycle\", \"fa-bicycle\"\r\n        ],\r\n        index: 9\r\n    },\r\n]\r\n\r\nexport default cardTypes;","import React from 'react'\r\n\r\n// Audio\r\nimport soundOn from '../../audio/soundOn.wav';\r\nimport soundOff from '../../audio/soundOff.wav';\r\n\r\n// Components\r\nimport Edit from './DialogContentTypes/Edit/Edit';\r\nimport Leaderboard from './DialogContentTypes/Leaderboard/Leaderboard';\r\nimport Stop from './DialogContentTypes/Stop/Stop.js';\r\n\r\n// Card Types\r\nimport cardTypes from '../../cardTypes';\r\n\r\n// Material UI Components\r\nimport { makeStyles, AppBar, Toolbar, Typography, Tooltip, Icon, Popover, Box, Zoom, Button, Dialog, DialogTitle, IconButton, Slider } from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(theme => ({\r\n    AppBar: {\r\n        position: 'relative',\r\n        zIndex: 10,\r\n        background: theme.palette.background.default\r\n    },\r\n    Toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    [`@media (max-width: 375px)`]: {\r\n        SetSize: {\r\n            fontSize: [[theme.typography.pxToRem(20)], '!important'], \r\n        }\r\n    },\r\n    Icon: {\r\n        width: '100%'\r\n    },\r\n    Orange: {\r\n        color: '#F39C12'\r\n    },\r\n    Yellow: {\r\n        color: '#F1C40F'\r\n    },\r\n    Teal: {\r\n        color: '#1ABC9C'\r\n    },\r\n    Red: {\r\n        color: '#E74C3C'\r\n    },\r\n    Button: {\r\n        color: theme.palette.error.main\r\n    },\r\n    SliderBlue: {\r\n        color: theme.palette.primary.main\r\n    },\r\n    SliderYellow: {\r\n        color: theme.palette.secondary.main\r\n    },\r\n    SliderRed: {\r\n        color: theme.palette.error.main\r\n    },\r\n    SoundButtonOn: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover' : {\r\n            background: theme.palette.primary.dark,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n    SoundButtonOff: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover' : {\r\n            background: theme.palette.error.dark,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Header( { cardType, gameState, soundState, volume, leaderboard, handleGetSeconds, onClickToggleSound, onChangeHandleSliderChange, onClickSelectCard, onClickClearLeaderboard } ) {\r\n    const Style = useStyles();\r\n\r\n    // Audio\r\n    const soundOnSound = new Audio(soundOn);\r\n    const soundOffSound = new Audio(soundOff);\r\n\r\n    \r\n    // Volume\r\n    const newVolume = volume === 0 ? 0.4 : volume;\r\n    soundOnSound.volume = newVolume;\r\n    soundOffSound.volume = newVolume;\r\n\r\n    let [randomIcon, setRandomIcon] = React.useState(null);\r\n\r\n    const [startTimer, setStartTimer] = React.useState(false);\r\n    let [time, setTime] = React.useState(0);\r\n\r\n    const random = Math.floor(Math.random() * Math.floor(15));\r\n\r\n    React.useEffect(() => {\r\n        let timerinterval;\r\n        let iconinterval;\r\n        const seconds = 5000;\r\n\r\n        switch(gameState){\r\n            case \"\":\r\n                setStartTimer(false);\r\n                setTime(0);\r\n\r\n                iconinterval = setInterval(() => {\r\n                    const newRandom = Math.floor(Math.random() * Math.floor(15));\r\n                    setRandomIcon(() => {\r\n                        return(\r\n                            cardType === null \r\n                                ? `fas ${cardTypes[0].icons[newRandom]}`\r\n                                    : cardType.title === \"Brands\"\r\n                                        ? `fab ${cardType.icons[newRandom]}`\r\n                                            : `fas ${cardType.icons[newRandom]}`\r\n                    )})\r\n                }, randomIcon === null ? 50 : seconds);\r\n\r\n                break;\r\n            case \"Started\":\r\n                setTimeout(() => {\r\n                    setStartTimer(true);\r\n                }, 5000);\r\n\r\n                clearInterval(iconinterval);\r\n                break;\r\n            case \"Stopped\":\r\n                setTimeout(() => {\r\n                    setStartTimer(false);\r\n                    handleGetSeconds(time);\r\n                }, 0);\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if(startTimer === true){\r\n            timerinterval = setInterval(() => {\r\n                setTime(newTime => newTime + 1);\r\n            }, 1000); \r\n        }else{\r\n            clearInterval(timerinterval);\r\n        }\r\n\r\n        return () => {clearInterval(iconinterval); clearInterval(timerinterval);};\r\n    }, [gameState, setRandomIcon, cardType, random, randomIcon, startTimer, setTime, time, handleGetSeconds]);\r\n\r\n    // Popover\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    // This method will open the Popup\r\n    const handlePopoverClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    // This method will close the Popup\r\n    const handlePopoverClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const openPopover = Boolean(anchorEl);\r\n    const popoverID = openPopover ? 'Audio Popup' : undefined;\r\n\r\n    // Slider\r\n    const [sliderValue, setSliderValue] = React.useState(volume * 100);\r\n    \r\n    // This method will update the sliders value\r\n    const handleSliderChange = (event, newValue) => {\r\n        event.preventDefault();\r\n\r\n        if(newValue === sliderValue){\r\n            return\r\n        }else{\r\n            setSliderValue(newValue);\r\n            onChangeHandleSliderChange(newValue);\r\n        }\r\n    }\r\n\r\n    // Dialog\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [dialogType, setDialogType] = React.useState(null);\r\n\r\n    // This method will open the dialog and set the dialog content to the type\r\n    const handleClickDialogOpen = (type) => {\r\n        setOpenDialog(true);\r\n        setDialogType(type);\r\n    };\r\n    \r\n    // This method will close the dialog \r\n    const handleDialogClose = () => {\r\n        setOpenDialog(false);\r\n        setRandomIcon(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar className={Style.AppBar} color=\"transparent\" position=\"static\" variant=\"outlined\" square>\r\n                <Toolbar className={Style.Toolbar}>\r\n                    <Toolbar disableGutters>\r\n                        {\r\n                            gameState === \"Started\" || gameState === \"Stopped\"\r\n                                ? \r\n                                <Typography color=\"primary\" variant=\"h6\">{time}<span>s</span></Typography>\r\n                                    :\r\n                                    <Tooltip title=\"Change Card Type\" placement=\"right\">\r\n                                        <span>\r\n                                            <IconButton aria-label=\"Change Card Type\" color=\"primary\" variant=\"text\" edge=\"start\" onClick={() => handleClickDialogOpen(\"Edit\")}>\r\n                                                <i className={`${randomIcon} ${Style.SetSize}`} style={{width: '1.125em'}}  />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                        }\r\n                        <IconButton aria-label=\"Hidden\" color=\"inherit\" variant=\"text\" edge=\"end\" style={{visibility: 'hidden'}}>\r\n                            <Icon className={`${Style.Icon} ${Style.SetSize} fas fa-volume-up`} />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                    <Typography variant=\"body1\" style={{textTransform: 'uppercase', fontWeight: 'bold'}}>\r\n                        <span className={Style.Orange}>Con</span>\r\n                        <span className={Style.Yellow}>cen</span>\r\n                        <span className={Style.Teal}>tra</span>\r\n                        <span className={Style.Red}>tion</span>\r\n                    </Typography>\r\n                    <Toolbar disableGutters>\r\n                        <Tooltip title={gameState === \"Started\" || gameState === \"Stopped\" ? \"Stop Game\" : leaderboard.length <= 0 ? \"\" : \"Leaderboard\"} placement=\"left\">\r\n                            <span>\r\n                                {\r\n                                    gameState === \"Started\" || gameState === \"Stopped\"\r\n                                        ? \r\n                                            <IconButton className={Style.Button} aria-label=\"Stop Game\" variant=\"text\" edge=\"start\" onClick={() => handleClickDialogOpen(\"Stop\")}>\r\n                                                <Icon className={`${Style.Icon} ${Style.SetSize} fas fa-ban`} />\r\n                                            </IconButton>\r\n                                            : \r\n                                            <IconButton  aria-label=\"Leaderboard\" color=\"secondary\" variant=\"text\" edge=\"start\" onClick={() => handleClickDialogOpen(\"Leaderboard\")} disabled={leaderboard.length <= 0 ? true : false}>\r\n                                                <Icon className={`${Style.Icon} ${Style.SetSize} fas fa-trophy`} />\r\n                                            </IconButton>\r\n                                }\r\n                            </span>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Audio\" placement=\"bottom\">\r\n                            <IconButton  aria-label=\"Audio\" color=\"inherit\" variant=\"text\" edge=\"end\" onClick={handlePopoverClick}>\r\n                                <Icon className={`${Style.Icon} ${Style.SetSize} fas fa-volume-up`} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Popover\r\n                            id={popoverID}\r\n                            open={openPopover}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handlePopoverClose}\r\n                            elevation={2}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }}\r\n                              transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            TransitionComponent={Zoom}\r\n                            transitionDuration={500}\r\n                        >\r\n                            <Box m={2}>\r\n                                <Box style={{width: '200px'}}>\r\n                                    <Typography id=\"volumeSlider\" variant=\"button\" gutterBottom>\r\n                                        Volume\r\n                                    </Typography>\r\n                                    <Slider \r\n                                        aria-labelledby=\"volumeSlider\"\r\n                                        value={sliderValue}\r\n                                        valueLabelDisplay=\"on\"\r\n                                        step={10} \r\n                                        marks\r\n                                        onChange={handleSliderChange}\r\n                                        disabled={soundState === true ? false : true}\r\n                                        className={(sliderValue >= 0 && sliderValue <= 40) ? Style.SliderBlue : (sliderValue >= 40 && sliderValue <= 70) ? Style.SliderYellow : Style.SliderRed }\r\n                                    />\r\n                                </Box>\r\n                                <Button \r\n                                    className={soundState === true ? Style.SoundButtonOff : Style.SoundButtonOn} \r\n                                    variant=\"contained\" \r\n                                    onMouseDown={() => {soundState === true ? soundOffSound.play() : soundOnSound.play()}} \r\n                                    onClick={soundState === true ? () => onClickToggleSound(\"Off\") : () => onClickToggleSound(\"On\")} fullWidth>\r\n                                    {\r\n                                        soundState === true \r\n                                            ? \"Sound Off\"\r\n                                                : \"Sound On\"\r\n                                    }\r\n                                </Button>\r\n                            </Box>\r\n                        </Popover>\r\n                    </Toolbar>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={handleDialogClose}\r\n                aria-labelledby=\"dialogTitle\"\r\n            >\r\n                <DialogTitle id=\"dialogTitle\">\r\n                    {\r\n                        dialogType === \"Edit\" \r\n                            ? \"Change Card Type\"\r\n                                : dialogType === \"Leaderboard\" \r\n                                    ? \"Leaderboard\"\r\n                                        : dialogType === \"Stop\" \r\n                                            ? \"Stop Game\"\r\n                                                : \"\"\r\n                    }\r\n                </DialogTitle>\r\n                {\r\n                    dialogType === \"Edit\" \r\n                        ? <Edit cardType={cardType} cardTypes={cardTypes} random={Math.floor(Math.random() * Math.floor(9))} onClickSelectCard={onClickSelectCard} handleDialogClose={handleDialogClose} />\r\n                            : dialogType === \"Leaderboard\" \r\n                                ? <Leaderboard leaderboard={leaderboard} handleDialogClose={handleDialogClose} onClickClearLeaderboard={onClickClearLeaderboard} />\r\n                                    : dialogType === \"Stop\" \r\n                                        ? <Stop leaderboard={leaderboard} handleDialogClose={handleDialogClose} onClickClearLeaderboard={onClickClearLeaderboard} />\r\n                                            : \"\"\r\n                }\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Audio\r\nimport CountdownNumSound from '../../audio/countdownNum.wav';\r\nimport Countdown0Sound from '../../audio/countdown0.wav';\r\nimport MatchSound from '../../audio/match.wav';\r\nimport WrongSound from '../../audio/wrong.wav';\r\nimport FinishedSound from '../../audio/finished.wav';\r\n\r\n// Material UI Components\r\nimport { makeStyles, Backdrop, Box, Container, Paper, Fade, Typography, Grid, Button, Hidden, Icon, Dialog, TextField, DialogContent, DialogActions, Zoom } from '@material-ui/core';\r\n\r\n// Material UI Custom Component Style\r\nconst useStyles = makeStyles(theme => ({\r\n    Backdrop: {\r\n        zIndex: '1'\r\n    },\r\n    Countdown: {\r\n        height: [['100%'], '!important'],\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    CountdownHeader: {\r\n        fontWeight: '500',\r\n        fontSize: '7.5rem',\r\n    },\r\n    DispNone: {\r\n        display: 'none'\r\n    },\r\n    Disp: {\r\n        display: ''\r\n    },\r\n    Hidden: {\r\n        visibility: 'hidden'\r\n    },\r\n    Visible: {\r\n        visibility: 'visible'\r\n    },\r\n    Button: {\r\n        color: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[0],\r\n        '&:hover': {\r\n            boxShadow: theme.shadows[0],\r\n        }\r\n    },\r\n    ButtonSmall: {\r\n        padding: theme.spacing(2.5, 1)\r\n    },\r\n    ButtonLarge: {\r\n        padding: theme.spacing(4, 1)\r\n    },\r\n    Icon: {\r\n        width: '100%'\r\n    },\r\n    Close: {\r\n        '& span': {\r\n            visibility: 'hidden'\r\n        }\r\n    },\r\n    Open: {\r\n        '& span': {\r\n            visibility: 'visible'\r\n        }\r\n    },\r\n    Match: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: theme.palette.common.white,\r\n\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.success.main,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n    Wrong: {\r\n        backgroundColor: theme.palette.error.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.error.main,\r\n            color: theme.palette.common.white,\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Game( { cardType, gameState, volume, handleGameState, onClickEnterName, } ) {\r\n    const Style = useStyles();\r\n\r\n    // Audio\r\n    const countdownNumSound = new Audio(CountdownNumSound);\r\n    const countdown0Sound = new Audio(Countdown0Sound);\r\n    const matchSound = new Audio(MatchSound);\r\n    const wrongSound = new Audio(WrongSound);\r\n    const finishedSound = new Audio(FinishedSound);\r\n\r\n    // Volume\r\n    countdownNumSound.volume = volume;\r\n    countdown0Sound.volume = volume;\r\n    matchSound.volume = volume;\r\n    wrongSound.volume = volume;\r\n    finishedSound.volume = volume;\r\n\r\n    // Backdrop \r\n    const [openBackdrop, setOpenBackdrop] = React.useState(true);\r\n    let [countdown, setCountdown] = React.useState(5);\r\n\r\n    const colors = [\"#3498DB\", \"#F39C12\", \"#F1C40F\", \"#1ABC9C\", \"#E74C3C\", \"#3498DB\"];\r\n    \r\n    // This method will countdown to 0 then will start the game \r\n    const handleClickStartGame = () => {\r\n        setOpenBackdrop(false);\r\n        handleClickDialogOpen(\"Countdown\");\r\n\r\n        let colorIndex = 0;\r\n\r\n        setTimeout(() => {\r\n            handleGameState(\"Started\");\r\n        }, 750);\r\n        \r\n        const interval = setInterval(() => {\r\n            countdownNumSound.play();\r\n\r\n            setTimeout(() => {\r\n                countdownNumSound.currentTime = 0;\r\n            }, 750);\r\n            \r\n            setCountdown(--countdown);\r\n            colorIndex = ++colorIndex;\r\n            \r\n            if(countdown <= 0){\r\n                setTimeout(() => {\r\n                    countdownNumSound.pause();\r\n                    countdownNumSound.currentTime = 0;\r\n                }, 750);\r\n                \r\n                setTimeout(() => {\r\n                    countdown0Sound.play();\r\n                }, 400);\r\n\r\n                clearInterval(interval);\r\n                setTimeout(() => {\r\n                    handleDialogClose()\r\n                }, 750);\r\n            }\r\n        }, 1000); \r\n    }\r\n\r\n    // Game\r\n    let openCards = [];\r\n    let matchedCards = [];\r\n\r\n    const iconsArray = (cardType === null) \r\n        ? [\r\n            \"fa-cat\", \"fa-cat\",\r\n            \"fa-dog\", \"fa-dog\",\r\n            \"fa-hippo\", \"fa-hippo\",\r\n            \"fa-fish\", \"fa-fish\",\r\n            \"fa-horse\", \"fa-horse\",\r\n            \"fa-dove\", \"fa-dove\",\r\n            \"fa-frog\", \"fa-frog\",\r\n            \"fa-crow\", \"fa-crow\"\r\n        ]\r\n            : cardType.icons;\r\n\r\n    // This method shuffles the icons\r\n    const shuffle = (iconArray) => {\r\n        let currentIndex = iconArray.length, temporaryValue, randomIndex;\r\n\r\n        while (currentIndex !== 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            temporaryValue = iconArray[currentIndex];\r\n            iconArray[currentIndex] = iconArray[randomIndex];\r\n            iconArray[randomIndex] = temporaryValue;\r\n        }\r\n        return iconArray;\r\n    }\r\n\r\n    /* \r\n        This method will handle whenever the user clicks on a card\r\n    */\r\n    const handleIconClick = (event, index, icon) => {\r\n        event.preventDefault();\r\n\r\n        matchSound.pause();\r\n        matchSound.currentTime = 0;\r\n        wrongSound.pause();\r\n        wrongSound.currentTime = 0;\r\n\r\n        if(openCards.length <= 1){\r\n            const allCards = document.querySelectorAll(\".Card\");\r\n            const currentCard = allCards[index - 1];\r\n            const currentCardButton = currentCard.firstChild;\r\n            const currentCardButtonClassList = currentCardButton.classList;\r\n            \r\n            if((!currentCardButtonClassList.contains(Style.Open)) && (!currentCardButtonClassList.contains(Style.Match))){\r\n                currentCardButton.classList.remove(Style.Close)\r\n                currentCardButton.classList.add(Style.Open);\r\n                openCards.push(currentCard);\r\n\r\n                if(openCards.length > 1){\r\n                    const otherCard = openCards[0];\r\n                    const otherCardButton = otherCard.firstChild;\r\n                    const otherCardIconParent = otherCardButton.firstChild;\r\n                    const otherCardIcon = otherCardIconParent.firstChild;\r\n                    const otherCardIconClassList = otherCardIcon.classList;\r\n\r\n                    if(otherCardIconClassList.contains(icon)){\r\n                        matchSound.play();\r\n                        matchSound.playbackRate = 1.5;\r\n\r\n                        currentCardButton.classList.add(Style.Match);\r\n                        otherCardButton.classList.add(Style.Match);\r\n\r\n                        matchedCards.push(otherCardButton);\r\n                        matchedCards.push(currentCardButton);\r\n                        openCards = [];\r\n                    }else{\r\n                        wrongSound.play();\r\n                        wrongSound.playbackRate = 1.5;\r\n\r\n                        currentCardButton.classList.add(Style.Wrong);\r\n                        otherCardButton.classList.add(Style.Wrong);\r\n\r\n                        setTimeout(() => {\r\n                                currentCardButton.classList.remove(Style.Open, Style.Wrong);\r\n                                otherCardButton.classList.remove(Style.Open, Style.Wrong);\r\n                                currentCardButton.classList.add(Style.Close);\r\n                                otherCardButton.classList.add(Style.Close);\r\n\r\n                                openCards = [];\r\n                        }, 500);\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let interval;\r\n        \r\n        switch(gameState){\r\n            case \"\":\r\n                setCountdown(5);\r\n                clearInterval(interval);\r\n\r\n                break;\r\n            case \"Started\":\r\n                interval = setInterval(() => {\r\n                    if(matchedCards.length === 16){\r\n                        finishedSound.play();\r\n                        finishedSound.playbackRate = 1.5;\r\n\r\n                        clearInterval(interval);\r\n                        handleGameState(\"Stopped\");\r\n                        handleClickDialogOpen(\"Name\");\r\n                    }\r\n                }, 500);\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    }, [matchedCards, handleGameState, gameState, finishedSound]);\r\n\r\n    // Dialog\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [dialogType, setDialogType] = React.useState(null);\r\n    const [name, setName] = React.useState('');\r\n\r\n    // This method will handle the name if the user types a name that is longer than 18 characters long a message will display\r\n    const handleNameMaxLength = (event) => {\r\n        if(name.length > 18){\r\n            if(event.key === \"Backspace\" || event.key === \"Delete\"){\r\n                setName(\"\");\r\n                event.target.value = \"\";\r\n            }else{\r\n                event.target.value = \"Limit of 18 Characters reached.\";\r\n                return\r\n            }\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n    // This method will open the dialog and set the dialog content to the type\r\n    const handleClickDialogOpen = (type) => {\r\n        setOpenDialog(true);\r\n        setDialogType(type);\r\n    };\r\n    \r\n    // This method will close the dialog \r\n    const handleDialogClose = (type) => {\r\n        setOpenDialog(false);\r\n        if(type === \"Name\"){\r\n            setName(\"\");\r\n            handleGameState(\"\");\r\n            setOpenBackdrop(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop className={Style.Backdrop} open={openBackdrop}>\r\n                <Paper variant=\"outlined\">\r\n                    <Box p={6}>\r\n                        <Button aria-label=\"Start\" color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => handleClickStartGame()}>Start Game</Button>\r\n                    </Box>\r\n                </Paper>\r\n            </Backdrop>\r\n            <Fade in={openBackdrop === true ? false : true} timeout={2000} >\r\n                <Box className={openBackdrop === true ? Style.Hidden : Style.Visible} m={2}>\r\n                    <Container maxWidth=\"sm\" disableGutters>\r\n                        <Grid container spacing={1} variant=\"outlined\" alignContent=\"center\" alignItems=\"center\">\r\n                            {\r\n                                shuffle(iconsArray).map((i, index) => {\r\n                                    return(\r\n                                        <Grid className=\"Card\" key={Math.random()} item xs={3}>\r\n                                                <Hidden smUp>\r\n                                                    <Button className={`${Style.Button} ${Style.ButtonSmall} ${Style.Close}`} variant=\"contained\" size=\"large\" fullWidth onMouseDown={(event) => handleIconClick(event, index + 1, i)}>\r\n                                                        <Icon \r\n                                                            className={\r\n                                                                cardType === null\r\n                                                                    ? `fas ${i} ${Style.Icon}`\r\n                                                                        : cardType.title === \"Brands\"\r\n                                                                            ? `fab ${i} ${Style.Icon}`\r\n                                                                                : `fas ${i} ${Style.Icon}`\r\n                                                            } \r\n                                                            style={{fontSize: '2.25rem'}}></Icon>\r\n                                                    </Button>\r\n                                                </Hidden>\r\n                                                <Hidden xsDown>\r\n                                                    <Button className={`${Style.Button} ${Style.ButtonLarge} ${Style.Close}`} variant=\"contained\" size=\"large\" fullWidth onMouseDown={(event) => handleIconClick(event, index + 1, i)}> \r\n                                                        <Icon \r\n                                                            className={\r\n                                                                cardType === null\r\n                                                                    ? `fas ${i} ${Style.Icon}`\r\n                                                                        : cardType.title === \"Brands\"\r\n                                                                            ? `fab ${i} ${Style.Icon}`\r\n                                                                                : `fas ${i} ${Style.Icon}`\r\n                                                            } \r\n                                                            style={{fontSize: '3.375rem'}}>\r\n                                                        </Icon>\r\n                                                    </Button>\r\n                                                </Hidden>\r\n                                        </Grid>\r\n                                    );\r\n                                })\r\n                            } \r\n                        </Grid>\r\n                    </Container>\r\n                </Box>\r\n            </Fade>\r\n            <Dialog\r\n                open={openDialog}\r\n                fullScreen={dialogType === \"Name\" ? false : true}\r\n                aria-labelledby=\"dialogTitle\"\r\n                TransitionComponent={Fade}\r\n                transitionDuration={1000}\r\n            >\r\n                {\r\n                    dialogType === \"Name\"\r\n                        ?\r\n                        <React.Fragment>\r\n                            <DialogContent style={{maxHeight: '500px'}}>\r\n                                <Typography color=\"secondary\" variant=\"h6\">Congratulations</Typography>\r\n                                <Typography color=\"textPrimary\" variant=\"body1\">You have set a new time</Typography>\r\n                                <Box pt={2} />\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    id=\"name\"\r\n                                    label=\"Enter Name\"\r\n                                    type=\"text\"\r\n                                    onChange={(event) => setName(event.target.value)}\r\n                                    onKeyDown={(event) => handleNameMaxLength(event)}\r\n                                    value={name}\r\n                                    placeholder='Try \"John\"'\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                />\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={() => handleDialogClose(\"Name\")} color=\"inherit\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={() => {handleDialogClose(\"Name\"); onClickEnterName(name);}} color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </React.Fragment>\r\n                            : dialogType === \"Countdown\"\r\n                                ?\r\n                                <DialogContent className={Style.Countdown}>\r\n                                    {\r\n                                        colors.map((color, index) => {\r\n                                            return(\r\n                                                <Zoom key={index} in={countdown === (-1*(index-5)) ? true : false} timeout={1000}>\r\n                                                    <Typography          \r\n                                                        className={`${Style.CountdownHeader} ${countdown === (-1*(index-5)) ? Style.Disp : Style.DispNone}`} \r\n                                                        variant=\"h1\" style={{color: color}} >{countdown === 0 ? \"GO\" : countdown}\r\n                                                    </Typography>\r\n                                                </Zoom>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </DialogContent>\r\n                                    : \"\"\r\n                }\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\n\n// Components\nimport Start from '../components/Start/Start';\nimport Header from '../components/Header/Header';\nimport Game from '../components/Game/Game';\n\n// Material UI Components\nimport { ThemeProvider, Container, Fade } from '@material-ui/core';\n\n// Material UI Custom Theme\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#85C1E9',\n      main: '#3498DB',\n      dark: '#2874A6',\n    },\n    secondary: {\n      light: '#F7DC6F',\n      main: '#F1C40F',\n      dark: '#B7950B',\n    },\n    success: {\n      light: '#82E0AA',\n      main: '#2ECC71',\n      dark: '#239B56',\n    },\n    error: {\n      light: '#F1948A',\n      main: '#E74C3C',\n      dark: '#B03A2E',\n    },\n  },\n});\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      cardType: null,\n      gameState: '',\n      soundState: true,\n      volume: null,\n      gameTime: null,\n      leaderboard: [],\n    }\n  }\n\n  static propTypes = {\n    cardType: PropTypes.object,\n    gameState: PropTypes.string,\n    soundState: PropTypes.bool,\n    volume: PropTypes.number,\n    gameTime: PropTypes.number,\n    leaderboard: PropTypes.array,\n  }\n\n  componentWillMount(){\n    // Will set a variables with the value of the local storage \n    const setLeaderboard = JSON.parse(localStorage.getItem(\"Leaderboard\") || \"[]\");\n    const setSoundState = JSON.parse(localStorage.getItem(\"SoundState\") || \"true\");\n    const setVolume = JSON.parse(localStorage.getItem(\"Volume\") || \"0.4\");\n    const setCardType = JSON.parse(localStorage.getItem(\"CardType\") || \"null\");\n\n    this.setState({\n      cardType: setCardType,\n      soundState: setSoundState,\n      volume: parseFloat(setVolume),\n      leaderboard: setLeaderboard,\n    })\n  }\n\n\n  // This method will store the current phase of the application in the gameState state\n  handleGameState = (phase) => {\n    this.setState({\n      gameState: phase\n    })\n  }\n\n  // This method will store the icon array in the cardType state\n  handleClickSelectCard = (card) => {\n    // Setting the cardType array into our local storage\n    localStorage.setItem(\"CardType\", JSON.stringify(card));\n\n    this.setState({\n      cardType: card\n    })\n  }\n\n  // This method will store the seconds in the gameTime state\n  handleGetSeconds = (time) => {\n    this.setState({\n      gameTime: time\n    })\n  }\n\n  handleClickToggleSound = (state) => {\n    if(state === \"On\"){\n      this.setState({\n        soundState: true,\n        volume: 0.4\n      });\n    }else{\n      this.setState({\n        soundState: false,\n        volume: 0\n      });\n    }\n\n    // Setting the SoundState into our local storage\n    localStorage.setItem(\"SoundState\", JSON.stringify(!this.state.soundState));\n    localStorage.setItem(\"Volume\", JSON.stringify(this.state.volume));\n  }\n\n  HandleSliderChange = (num) => {\n    this.setState({\n      volume: parseFloat(num / 100)\n    });\n\n    // Setting the SoundState into our local storage\n    localStorage.setItem(\"Volume\", JSON.stringify(num / 100));\n  }\n\n  /* \n    This method will create an object that holds the name of the player and the number of seconds it took the player to match all cards\n    Then it will store the object in the leaderboard array\n  */ \n  handleClickEnterName = (name) => {\n    if(name === \"\"){\n      return\n    }else{\n      const time = this.state.gameTime;\n      const newLeaderboard = [...this.state.leaderboard];\n\n      const newItem = {\n        id: Math.random(),\n        name: name,\n        time: time\n      };\n\n      newLeaderboard.push(newItem);\n\n      newLeaderboard.sort((a, b) => parseFloat(a.time) - parseFloat(b.time));\n\n      // Setting the leaderboard array into our local storage\n      localStorage.setItem(\"Leaderboard\", JSON.stringify(newLeaderboard));\n\n      this.setState({\n        gameState: '',\n        gameTime: null,\n        leaderboard: newLeaderboard,\n      })\n    }\n  }\n\n  // This method will clear the leaderboard\n  handleClickClearLeaderboard = () => {\n    // Deleting the Leaderboard item and CardType from local storage\n    localStorage.removeItem(\"Leaderboard\")\n    localStorage.removeItem(\"CardType\")\n\n    this.setState({\n      leaderboard: []\n    })\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Switch>\n              <Route path=\"/game\">\n                <Container maxWidth=\"md\" disableGutters>\n                  <Fade in timeout={2000}>\n                    <div>\n                      <Header \n                        cardType={this.state.cardType} \n                        gameState={this.state.gameState} \n                        soundState={this.state.soundState} \n                        volume={this.state.volume}\n                        leaderboard={this.state.leaderboard} \n                        handleGetSeconds={this.handleGetSeconds} \n                        onClickToggleSound={this.handleClickToggleSound} \n                        onChangeHandleSliderChange={this.HandleSliderChange} \n                        onClickSelectCard={this.handleClickSelectCard} \n                        onClickClearLeaderboard={this.handleClickClearLeaderboard} />\n                      <Game \n                        cardType={this.state.cardType} \n                        gameState={this.state.gameState} \n                        volume={this.state.volume}\n                        handleGameState={this.handleGameState} \n                        onClickEnterName={this.handleClickEnterName} />\n                    </div>\n                  </Fade>\n                </Container>\n              </Route>\n              <Route exact path=\"/\">\n                <Start volume={this.state.volume} />\n              </Route>\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport App from './container/App';\n\n// Style sheet\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/intro.410b9adf.wav\";","module.exports = __webpack_public_path__ + \"static/media/soundOn.4112286d.wav\";","module.exports = __webpack_public_path__ + \"static/media/soundOff.f73b9544.wav\";","module.exports = __webpack_public_path__ + \"static/media/countdownNum.1e6a36f9.wav\";","module.exports = __webpack_public_path__ + \"static/media/countdown0.933652f0.wav\";","module.exports = __webpack_public_path__ + \"static/media/match.d56b21ab.wav\";","module.exports = __webpack_public_path__ + \"static/media/wrong.e4da89d0.wav\";","module.exports = __webpack_public_path__ + \"static/media/finished.073c400a.wav\";"],"sourceRoot":""}